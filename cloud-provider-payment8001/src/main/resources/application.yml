server:
  port: 8001
spring:
  application:
    name: could-payment-service
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: org.gjt.mm.mysql.Driver
    url: jdbc:mysql://127.0.0.1:3306/springcould_2020?useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: root
    password: dlf123
    #Redis的相关配置
  redis:
    host: 120.53.125.32
    port: 6380
    password: dlf123
    database: 0

mybatis :
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.sky.entyties #所有entity别名类所在的包

eureka:
  client:
    #标识是否将自己注册进EurekaServer默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡。
    fetch-registry: true
    service-url:
      #集群版 http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka,http://eureka7003.com:7003/eureka
      defaultZone: http://120.53.125.32:7001/eureka
  instance:
    instance-id: payment8001
    #访问路径可以显示ip
    prefer-ip-address: true
    #心跳检测与续约时间
    #开发时设置小些，保证服务关闭后注册中心能及时剔除服务。
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后的等待时间上限，单位为秒(默认是90秒)，超时将剔除服务
    lease-expiration-duration-in-seconds: 2


# xxl-job配置
xxl:
  job:
    admin:
      # 调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行"执行器心跳注册"和"任务结果回调"；为空则关闭自动注册；
      #  http://120.53.125.32:8086/xxl-job-admin
      addresses: http://127.0.0.1:8080/xxl-job-admin
    executor:
      # 执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。
      address:
      # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册
      appname: demo-app
      # 执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 "执行器注册" 和 "调度中心请求并触发任务"；
      ip:
      # 执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；
      port: 0
      # 执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；
      logpath:
      # 执行器日志文件保存天数 [选填] ： 过期日志自动清理, 限制值大于等于3时生效; 否则, 如-1, 关闭自动清理功能；
      logretentiondays: 15
    # 执行器通讯TOKEN [选填]：非空时启用；
    accessToken:
